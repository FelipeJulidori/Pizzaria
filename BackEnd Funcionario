// server.js
const express = require('express');
const mysql = require('mysql2');
const cors = require('cors');
const bodyParser = require('body-parser');

const app = express();
const port = 3000;

// Configuração do CORS
app.use(cors());
app.use(bodyParser.json());

// Conexão ao banco de dados
const db = mysql.createConnection({
    host: '127.0.0.1',
    user: 'root', // substitua pelo seu usuário do MySQL
    password: '1234', // substitua pela sua senha do MySQL
    database: 'felipe',
});

db.connect(err => {
    if (err) {
        console.error('Erro ao conectar ao banco de dados:', err);
        return;
    }
    console.log('Conectado ao banco de dados MySQL');
});

// Rotas

// Listar todos os funcionários
app.get('/funcionarios', (req, res) => {
    db.query('SELECT * FROM funcionario', (err, results) => {
        if (err) {
            return res.status(500).json({ error: err });
        }
        res.json(results);
    });
});

// Adicionar um novo funcionário
app.post('/funcionarios', (req, res) => {
    const { nome, email, função } = req.body;
    db.query('INSERT INTO funcionario (nome, email, função) VALUES (?, ?, ?)', [nome, email, função], (err, results) => {
        if (err) {
            return res.status(500).json({ error: err });
        }
        res.status(201).json({ id: results.insertId, nome, email, função });
    });
});

// Atualizar um funcionário
app.put('/funcionarios/:id', (req, res) => {
    const id = req.params.id;
    const { nome, email, função } = req.body;
    db.query('UPDATE funcionario SET nome = ?, email = ?, função = ? WHERE id = ?', [nome, email, função, id], (err) => {
        if (err) {
            return res.status(500).json({ error: err });
        }
        res.json({ id, nome, email, função });
    });
});

// Deletar um funcionário
app.delete('/funcionarios/:id', (req, res) => {
    const id = req.params.id;
    db.query('DELETE FROM funcionario WHERE id = ?', [id], (err) => {
        if (err) {
            return res.status(500).json({ error: err });
        }
        res.status(204).send();
    });
});

// Iniciar o servidor
app.listen(port, () => {
    console.log(`Servidor rodando em http://localhost:${port}`);
});
